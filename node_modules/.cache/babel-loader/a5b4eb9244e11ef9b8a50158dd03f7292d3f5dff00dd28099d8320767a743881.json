{"ast":null,"code":"/*! @azure/msal-browser v2.34.0 2023-03-07 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from '@azure/msal-common';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\nvar BrowserConfigurationAuthErrorMessage = {\n  redirectUriNotSet: {\n    code: \"redirect_uri_empty\",\n    desc: \"A redirect URI is required for all calls, and none has been set.\"\n  },\n  postLogoutUriNotSet: {\n    code: \"post_logout_uri_empty\",\n    desc: \"A post logout redirect has not been set.\"\n  },\n  storageNotSupportedError: {\n    code: \"storage_not_supported\",\n    desc: \"Given storage configuration option was not supported.\"\n  },\n  noRedirectCallbacksSet: {\n    code: \"no_redirect_callbacks\",\n    desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  invalidCallbackObject: {\n    code: \"invalid_callback_object\",\n    desc: \"The object passed for the callback was invalid. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  stubPcaInstanceCalled: {\n    code: \"stubbed_public_client_application_called\",\n    desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  inMemRedirectUnavailable: {\n    code: \"in_mem_redirect_unavailable\",\n    desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n  },\n  entropyNotProvided: {\n    code: \"entropy_not_provided\",\n    desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\nvar BrowserConfigurationAuthError = /** @class */function (_super) {\n  __extends(BrowserConfigurationAuthError, _super);\n  function BrowserConfigurationAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n    _this.name = \"BrowserConfigurationAuthError\";\n    Object.setPrototypeOf(_this, BrowserConfigurationAuthError.prototype);\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n   */\n  BrowserConfigurationAuthError.createRedirectUriEmptyError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n   */\n  BrowserConfigurationAuthError.createPostLogoutRedirectUriEmptyError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n  };\n  /**\r\n   * Creates error thrown when given storage location is not supported.\r\n   * @param givenStorageLocation\r\n   */\n  BrowserConfigurationAuthError.createStorageNotSupportedError = function (givenStorageLocation) {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc + \" Given Location: \" + givenStorageLocation);\n  };\n  /**\r\n   * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n   */\n  BrowserConfigurationAuthError.createRedirectCallbacksNotSetError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n  };\n  /**\r\n   * Creates error thrown when the stub instance of PublicClientApplication is called.\r\n   */\n  BrowserConfigurationAuthError.createStubPcaInstanceCalledError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code, BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n  };\n  /*\r\n   * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\r\n   */\n  BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n  };\n  /**\r\n   * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\r\n   */\n  BrowserConfigurationAuthError.createEntropyNotProvided = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n  };\n  return BrowserConfigurationAuthError;\n}(AuthError);\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage };","map":{"version":3,"names":["BrowserConfigurationAuthErrorMessage","redirectUriNotSet","code","desc","postLogoutUriNotSet","storageNotSupportedError","noRedirectCallbacksSet","invalidCallbackObject","stubPcaInstanceCalled","inMemRedirectUnavailable","entropyNotProvided","__extends","BrowserConfigurationAuthError","_super","errorCode","errorMessage","_this","call","name","Object","setPrototypeOf","prototype","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","createStorageNotSupportedError","givenStorageLocation","createRedirectCallbacksNotSetError","createStubPcaInstanceCalledError","createInMemoryRedirectUnavailableError","createEntropyNotProvided","AuthError"],"sources":["/Users/sujal/Desktop/MSAL/msal-react-tutorial/node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\"\n    },\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\"\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    stubPcaInstanceCalled: {\n        code: \"stubbed_public_client_application_called\",\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    inMemRedirectUnavailable: {\n        code: \"in_mem_redirect_unavailable\",\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n    },\n    entropyNotProvided: {\n        code: \"entropy_not_provided\",\n        desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n    }\n\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation \n     */\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n    }\n\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n    }\n\n    /**\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\n     */\n    static createStubPcaInstanceCalledError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code,\n            BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n    }\n\n    /*\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n     */\n    static createInMemoryRedirectUnavailableError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n    }\n    \n    /**\n     * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\n     */\n    static createEntropyNotProvided(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n    }\n}\n"],"mappings":";;;;;;AAAA;;;;AAOA;;;IAGaA,oCAAoC,GAAG;EAChDC,iBAAiB,EAAE;IACfC,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACDC,mBAAmB,EAAE;IACjBF,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE;GACT;EACDE,wBAAwB,EAAE;IACtBH,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE;GACT;EACDG,sBAAsB,EAAE;IACpBJ,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE,qIAAqI,GACvI;GACP;EACDI,qBAAqB,EAAE;IACnBL,IAAI,EAAE,yBAAyB;IAC/BC,IAAI,EAAE,kDAAkD,GACtD;GACL;EACDK,qBAAqB,EAAE;IACnBN,IAAI,EAAE,0CAA0C;IAChDC,IAAI,EAAE;GACT;EACDM,wBAAwB,EAAE;IACtBP,IAAI,EAAE,6BAA6B;IACnCC,IAAI,EAAE;GACT;EACDO,kBAAkB,EAAE;IAChBR,IAAI,EAAE,sBAAsB;IAC5BC,IAAI,EAAE;;;AAId;;;;EAGmDQ,SAAA,CAAAC,6BAAA,EAAAC,MAAA;EAE/C,SAAAD,8BAAYE,SAAiB,EAAEC,YAAqB;IAApD,IAAAC,KAAA,GACIH,MAAA,CAAAI,IAAA,OAAMH,SAAS,EAAEC,YAAY,CAAC;IAC9BC,KAAI,CAACE,IAAI,GAAG,+BAA+B;IAE3CC,MAAM,CAACC,cAAc,CAACJ,KAAI,EAAEJ,6BAA6B,CAACS,SAAS,CAAC;;;;;;EAMjET,6BAAA,CAAAU,2BAA2B,GAAlC;IACI,OAAO,IAAIV,6BAA6B,CAACZ,oCAAoC,CAACC,iBAAiB,CAACC,IAAI,EAChGF,oCAAoC,CAACC,iBAAiB,CAACE,IAAI,CAAC;GACnE;;;;EAKMS,6BAAA,CAAAW,qCAAqC,GAA5C;IACI,OAAO,IAAIX,6BAA6B,CAACZ,oCAAoC,CAACI,mBAAmB,CAACF,IAAI,EAClGF,oCAAoC,CAACI,mBAAmB,CAACD,IAAI,CAAC;GACrE;;;;;EAMMS,6BAAA,CAAAY,8BAA8B,GAArC,UAAsCC,oBAA4B;IAC9D,OAAO,IAAIb,6BAA6B,CAACZ,oCAAoC,CAACK,wBAAwB,CAACH,IAAI,EAAKF,oCAAoC,CAACK,wBAAwB,CAACF,IAAI,yBAAoBsB,oBAAsB,CAAC;GAChO;;;;EAKMb,6BAAA,CAAAc,kCAAkC,GAAzC;IACI,OAAO,IAAId,6BAA6B,CAACZ,oCAAoC,CAACM,sBAAsB,CAACJ,IAAI,EACrGF,oCAAoC,CAACM,sBAAsB,CAACH,IAAI,CAAC;GACxE;;;;EAKMS,6BAAA,CAAAe,gCAAgC,GAAvC;IACI,OAAO,IAAIf,6BAA6B,CAACZ,oCAAoC,CAACQ,qBAAqB,CAACN,IAAI,EACpGF,oCAAoC,CAACQ,qBAAqB,CAACL,IAAI,CAAC;GACvE;;;;EAKMS,6BAAA,CAAAgB,sCAAsC,GAA7C;IACI,OAAO,IAAIhB,6BAA6B,CAACZ,oCAAoC,CAACS,wBAAwB,CAACP,IAAI,EAAEF,oCAAoC,CAACS,wBAAwB,CAACN,IAAI,CAAC;GACnL;;;;EAKMS,6BAAA,CAAAiB,wBAAwB,GAA/B;IACI,OAAO,IAAIjB,6BAA6B,CAACZ,oCAAoC,CAACU,kBAAkB,CAACR,IAAI,EAAEF,oCAAoC,CAACU,kBAAkB,CAACP,IAAI,CAAC;GACvK;EACL,OAAAS,6BAAC;AAAD,CA9DA,CAAmDkB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}