{"ast":null,"code":"/*! @azure/msal-browser v2.34.0 2023-03-07 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { InteractionRequiredAuthError, AuthError } from '@azure/msal-common';\nimport { BrowserAuthError } from './BrowserAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar NativeStatusCode;\n(function (NativeStatusCode) {\n  NativeStatusCode[\"USER_INTERACTION_REQUIRED\"] = \"USER_INTERACTION_REQUIRED\";\n  NativeStatusCode[\"USER_CANCEL\"] = \"USER_CANCEL\";\n  NativeStatusCode[\"NO_NETWORK\"] = \"NO_NETWORK\";\n  NativeStatusCode[\"TRANSIENT_ERROR\"] = \"TRANSIENT_ERROR\";\n  NativeStatusCode[\"PERSISTENT_ERROR\"] = \"PERSISTENT_ERROR\";\n  NativeStatusCode[\"DISABLED\"] = \"DISABLED\";\n  NativeStatusCode[\"ACCOUNT_UNAVAILABLE\"] = \"ACCOUNT_UNAVAILABLE\";\n})(NativeStatusCode || (NativeStatusCode = {}));\nvar NativeAuthErrorMessage = {\n  extensionError: {\n    code: \"ContentError\"\n  },\n  userSwitch: {\n    code: \"user_switch\",\n    desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n  },\n  tokensNotFoundInCache: {\n    code: \"tokens_not_found_in_internal_memory_cache\",\n    desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n  }\n};\nvar NativeAuthError = /** @class */function (_super) {\n  __extends(NativeAuthError, _super);\n  function NativeAuthError(errorCode, description, ext) {\n    var _this = _super.call(this, errorCode, description) || this;\n    Object.setPrototypeOf(_this, NativeAuthError.prototype);\n    _this.name = \"NativeAuthError\";\n    _this.ext = ext;\n    return _this;\n  }\n  /**\r\n   * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n   */\n  NativeAuthError.prototype.isFatal = function () {\n    if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n      return true;\n    }\n    switch (this.errorCode) {\n      case NativeAuthErrorMessage.extensionError.code:\n        return true;\n      default:\n        return false;\n    }\n  };\n  /**\r\n   * Create the appropriate error object based on the WAM status code.\r\n   * @param code\r\n   * @param description\r\n   * @param ext\r\n   * @returns\r\n   */\n  NativeAuthError.createError = function (code, description, ext) {\n    if (ext && ext.status) {\n      switch (ext.status) {\n        case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n          return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n        case NativeStatusCode.USER_INTERACTION_REQUIRED:\n          return new InteractionRequiredAuthError(code, description);\n        case NativeStatusCode.USER_CANCEL:\n          return BrowserAuthError.createUserCancelledError();\n        case NativeStatusCode.NO_NETWORK:\n          return BrowserAuthError.createNoNetworkConnectivityError();\n      }\n    }\n    return new NativeAuthError(code, description, ext);\n  };\n  /**\r\n   * Creates user switch error when the user chooses a different account in the native broker prompt\r\n   * @returns\r\n   */\n  NativeAuthError.createUserSwitchError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n  };\n  /**\r\n   * Creates a tokens not found error when the internal cache look up fails\r\n   * @returns NativeAuthError: tokensNotFoundInCache\r\n   */\n  NativeAuthError.createTokensNotFoundInCacheError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n  };\n  return NativeAuthError;\n}(AuthError);\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };","map":{"version":3,"names":["NativeStatusCode","NativeAuthErrorMessage","extensionError","code","userSwitch","desc","tokensNotFoundInCache","__extends","NativeAuthError","_super","errorCode","description","ext","_this","call","Object","setPrototypeOf","prototype","name","isFatal","status","PERSISTENT_ERROR","DISABLED","createError","ACCOUNT_UNAVAILABLE","InteractionRequiredAuthError","createNativeAccountUnavailableError","USER_INTERACTION_REQUIRED","USER_CANCEL","BrowserAuthError","createUserCancelledError","NO_NETWORK","createNoNetworkConnectivityError","createUserSwitchError","createTokensNotFoundInCacheError","AuthError"],"sources":["/Users/sujal/Desktop/MSAL/msal-react-tutorial/node_modules/@azure/msal-browser/src/error/NativeAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, InteractionRequiredAuthError } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"./BrowserAuthError\";\n\nexport type OSError = {\n    error: number;\n    protocol_error: string;\n    properties: object;\n    status: string;\n    retryable?: boolean;\n};\n\nexport enum NativeStatusCode {\n    USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\",\n    USER_CANCEL = \"USER_CANCEL\",\n    NO_NETWORK = \"NO_NETWORK\",\n    TRANSIENT_ERROR = \"TRANSIENT_ERROR\",\n    PERSISTENT_ERROR = \"PERSISTENT_ERROR\",\n    DISABLED = \"DISABLED\",\n    ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\"\n}\n\nexport const NativeAuthErrorMessage = {\n    extensionError: {\n        code: \"ContentError\"\n    },\n    userSwitch: {\n        code: \"user_switch\",\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n    },\n    tokensNotFoundInCache: {\n        code: \"tokens_not_found_in_internal_memory_cache\",\n        desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n    }\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n\n    /**\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\n     */\n    isFatal(): boolean {\n        if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n            return true;\n        }\n\n        switch (this.errorCode) {\n            case NativeAuthErrorMessage.extensionError.code:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Create the appropriate error object based on the WAM status code.\n     * @param code\n     * @param description\n     * @param ext\n     * @returns\n     */\n    static createError(code: string, description: string, ext?: OSError): AuthError {\n        if (ext && ext.status) {\n            switch (ext.status) {\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new InteractionRequiredAuthError(code, description);\n                case NativeStatusCode.USER_CANCEL:\n                    return BrowserAuthError.createUserCancelledError();\n                case NativeStatusCode.NO_NETWORK:\n                    return BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        return new NativeAuthError(code, description, ext);\n    }\n\n    /**\n     * Creates user switch error when the user chooses a different account in the native broker prompt\n     * @returns\n     */\n    static createUserSwitchError(): NativeAuthError {\n        return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n    }\n\n    /**\n     * Creates a tokens not found error when the internal cache look up fails\n     * @returns NativeAuthError: tokensNotFoundInCache\n     */\n    static createTokensNotFoundInCacheError(): NativeAuthError {\n        return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n    }\n}\n"],"mappings":";;;;;;;AAAA;;;;IAgBYA,gBAAA;AAAZ,WAAYA,gBAAgB;EACxBA,gBAAA,2DAAuD;EACvDA,gBAAA,+BAA2B;EAC3BA,gBAAA,6BAAyB;EACzBA,gBAAA,uCAAmC;EACnCA,gBAAA,yCAAqC;EACrCA,gBAAA,yBAAqB;EACrBA,gBAAA,+CAA2C;AAC/C,CAAC,EARWA,gBAAgB,KAAhBA,gBAAgB;IAUfC,sBAAsB,GAAG;EAClCC,cAAc,EAAE;IACZC,IAAI,EAAE;GACT;EACDC,UAAU,EAAE;IACRD,IAAI,EAAE,aAAa;IACnBE,IAAI,EAAE;GACT;EACDC,qBAAqB,EAAE;IACnBH,IAAI,EAAE,2CAA2C;IACjDE,IAAI,EAAE;;;;EAIuBE,SAAA,CAAAC,eAAA,EAAAC,MAAA;EAGjC,SAAAD,gBAAYE,SAAiB,EAAEC,WAAmB,EAAEC,GAAa;IAAjE,IAAAC,KAAA,GACIJ,MAAA,CAAAK,IAAA,OAAMJ,SAAS,EAAEC,WAAW,CAAC;IAE7BI,MAAM,CAACC,cAAc,CAACH,KAAI,EAAEL,eAAe,CAACS,SAAS,CAAC;IACtDJ,KAAI,CAACK,IAAI,GAAG,iBAAiB;IAC7BL,KAAI,CAACD,GAAG,GAAGA,GAAG;;;;;;EAMlBJ,eAAA,CAAAS,SAAA,CAAAE,OAAO,GAAP;IACI,IAAI,IAAI,CAACP,GAAG,IAAI,IAAI,CAACA,GAAG,CAACQ,MAAM,KAAK,IAAI,CAACR,GAAG,CAACQ,MAAM,KAAKpB,gBAAgB,CAACqB,gBAAgB,IAAI,IAAI,CAACT,GAAG,CAACQ,MAAM,KAAKpB,gBAAgB,CAACsB,QAAQ,CAAC,EAAE;MACzI,OAAO,IAAI;;IAGf,QAAQ,IAAI,CAACZ,SAAS;MAClB,KAAKT,sBAAsB,CAACC,cAAc,CAACC,IAAI;QAC3C,OAAO,IAAI;MACf;QACI,OAAO,KAAK;IAAC;GAExB;;;;;;;;EASMK,eAAA,CAAAe,WAAW,GAAlB,UAAmBpB,IAAY,EAAEQ,WAAmB,EAAEC,GAAa;IAC/D,IAAIA,GAAG,IAAIA,GAAG,CAACQ,MAAM,EAAE;MACnB,QAAQR,GAAG,CAACQ,MAAM;QACd,KAAKpB,gBAAgB,CAACwB,mBAAmB;UACrC,OAAOC,4BAA4B,CAACC,mCAAmC,EAAE;QAC7E,KAAK1B,gBAAgB,CAAC2B,yBAAyB;UAC3C,OAAO,IAAIF,4BAA4B,CAACtB,IAAI,EAAEQ,WAAW,CAAC;QAC9D,KAAKX,gBAAgB,CAAC4B,WAAW;UAC7B,OAAOC,gBAAgB,CAACC,wBAAwB,EAAE;QACtD,KAAK9B,gBAAgB,CAAC+B,UAAU;UAC5B,OAAOF,gBAAgB,CAACG,gCAAgC,EAAE;MAAC;;IAIvE,OAAO,IAAIxB,eAAe,CAACL,IAAI,EAAEQ,WAAW,EAAEC,GAAG,CAAC;GACrD;;;;;EAMMJ,eAAA,CAAAyB,qBAAqB,GAA5B;IACI,OAAO,IAAIzB,eAAe,CAACP,sBAAsB,CAACG,UAAU,CAACD,IAAI,EAAEF,sBAAsB,CAACG,UAAU,CAACC,IAAI,CAAC;GAC7G;;;;;EAMMG,eAAA,CAAA0B,gCAAgC,GAAvC;IACI,OAAO,IAAI1B,eAAe,CAACP,sBAAsB,CAACK,qBAAqB,CAACH,IAAI,EAAEF,sBAAsB,CAACK,qBAAqB,CAACD,IAAI,CAAC;GACnI;EACL,OAAAG,eAAC;AAAD,CAlEA,CAAqC2B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}